name: Deploy with DockerHub to Ubuntu Server

on:
  push:
    # 브런치 => main에서 Commit 감지되면 실행
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 현재 repository 안에서 Checkout을 했을 때 설정
      - name: Checkout repository
        uses: actions/checkout@v2
        
      # Java JDK17 설치 및 환견병수
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # gradlew => 우분투에서 실행 권한이 없는 경우 => 실행 권한 부여
      # 실행 권한 : +r(읽기) +w(쓰기) +x(실행)
      - name: Set gradlew permissions
        run: chmod +x ./gradlew

      # clean(전체 삭제 후) bulid(.jar파일 생성)
      - name: Build with Gradle
        run: ./gradlew clean build

      # docker hub 로그인
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # docker build : image를 생성 => docker hub에 push
      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:latest

      # SSH => 개인키를 사용해 AWS에 접속
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 서버 키 등록
      - name: Add known hosts
        run: ssh-keyscan -t ed25519 ${{ vars.IP_ADDRESS }} >> ~/.ssh/known_hosts

      # 실행
      # container명 => 같으면 안된다
      # 1. 정지 : docker stop image명
      # 2. 삭제 : docker rm image명
      # 3. docker hub에서 pull(읽기) : docker pull 아이디명/image명
      # 4. 실행 명령 : run
      - name: Deploy on server using DockerHub image
        run: |
          ssh ubuntu@${{ vars.IP_ADDRESS }} << 'EOF'
            docker stop spring-app || true
            docker rm spring-app || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-app:latest
            docker run -d --name spring-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/spring-app:latest
          EOF
